{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBsWnteQfOOfk5yW4j4dkOW_VT7jAWppiU\",\n  authDomain: \"crwn-db-cddbc.firebaseapp.com\",\n  projectId: \"crwn-db-cddbc\",\n  storageBucket: \"crwn-db-cddbc.appspot.com\",\n  messagingSenderId: \"863113609813\",\n  appId: \"1:863113609813:web:f32f089a64554aa65e8adc\",\n  measurementId: \"G-TY78QXW9R5\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = doc(firestore, `users/${userAuth.uid}`);\n  const snapShot = await getDoc(userRef);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\ninitializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const firestore = getFirestore();\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  params: 'select_account'\n});\nexport const signInWithGoogle = () => signInWithPopup(auth, provider).catch(error => console.log(error));","map":{"version":3,"sources":["/Users/geu_t/Desktop/react_course/crwn-clothing/src/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","uid","snapShot","exists","displayName","email","createdAt","Date","error","console","log","message","auth","provider","setCustomParameters","params","signInWithGoogle","catch"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,EAAkBC,kBAAlB,EAAsCC,eAAtC,QAA6D,eAA7D;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,oBAAlD;AAGA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,+BAFO;AAGnBC,EAAAA,SAAS,EAAE,eAHQ;AAInBC,EAAAA,aAAa,EAAE,2BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAiC;AAEtE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGd,GAAG,CAACe,SAAD,EAAa,SAAQH,QAAQ,CAACI,GAAI,EAAlC,CAAnB;AACA,QAAMC,QAAQ,GAAG,MAAMhB,MAAM,CAACa,OAAD,CAA7B;;AACA,MAAG,CAACG,QAAQ,CAACC,MAAb,EAAoB;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBR,QAA7B;AACA,UAAMS,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAG;AACC,YAAMpB,MAAM,CAACY,OAAD,EAAS;AACjBK,QAAAA,WADiB;AAEjBC,QAAAA,KAFiB;AAGjBC,QAAAA,SAHiB;AAIjB,WAAGR;AAJc,OAAT,CAAZ;AAMH,KAPD,CAOC,OAAMU,KAAN,EAAY;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AAEH;AACJ;;AACD,SAAOZ,OAAP;AACH,CAtBM;AAwBPnB,aAAa,CAACQ,cAAD,CAAb;AAEA,OAAO,MAAMwB,IAAI,GAAG/B,OAAO,EAApB;AACP,OAAO,MAAMmB,SAAS,GAAGhB,YAAY,EAA9B;AAEP,MAAM6B,QAAQ,GAAG,IAAI/B,kBAAJ,EAAjB;AACA+B,QAAQ,CAACC,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAC9BjC,eAAe,CAAC6B,IAAD,EAAOC,QAAP,CAAf,CAAgCI,KAAhC,CAAuCT,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAjD,CADK","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n \n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBsWnteQfOOfk5yW4j4dkOW_VT7jAWppiU\",\n    authDomain: \"crwn-db-cddbc.firebaseapp.com\",\n    projectId: \"crwn-db-cddbc\",\n    storageBucket: \"crwn-db-cddbc.appspot.com\",\n    messagingSenderId: \"863113609813\",\n    appId: \"1:863113609813:web:f32f089a64554aa65e8adc\",\n    measurementId: \"G-TY78QXW9R5\"\n};\n \nexport const createUserProfileDocument = async(userAuth, additionalData)=>{\n\n    if(!userAuth) return;\n\n    const userRef = doc(firestore, `users/${userAuth.uid}`);\n    const snapShot = await getDoc(userRef);\n    if(!snapShot.exists){\n        const {displayName, email} = userAuth;\n        const createdAt = new Date()\n        try{\n            await setDoc(userRef,{\n                displayName,\n                email,\n                createdAt,\n                ...additionalData,\n            })\n        }catch(error){\n            console.log(\"Error creating user\", error.message);\n\n        }\n    }\n    return userRef;\n}\n\ninitializeApp(firebaseConfig);\n \nexport const auth = getAuth();\nexport const firestore = getFirestore();\n \nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({ params: 'select_account' });\nexport const signInWithGoogle = () =>\n  signInWithPopup(auth, provider).catch((error) => console.log(error));\n"]},"metadata":{},"sourceType":"module"}